<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Animated Map Finder – i18n Auto-Detect</title>
  <link
    rel="stylesheet"
    href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    crossorigin
  />
  <style>
    /* …………… layout + animation styles unchanged …………… */
    html,body{margin:0;padding:0;height:100%;font-family:system-ui,sans-serif;background:#222;color:#fff}
    #map{height:80%;width:100%}
    header{height:20%;display:flex;flex-direction:column;justify-content:center;align-items:center;gap:.5rem;background:#111;position:relative;overflow:hidden}
    header input,header button,header select{padding:.5rem 1rem;font-size:1rem;border:none;border-radius:8px}
    header button{margin-left:.5rem;background:#ff6f00;color:#fff;cursor:pointer}
    .plane{position:absolute;top:50%;left:-10%;width:60px;height:60px;background:url('https://raw.githubusercontent.com/iconic/open-iconic/master/svg/airplane.svg') no-repeat center/contain;opacity:.85;animation:fly 18s linear infinite}
    @keyframes fly{0%{left:-10%;transform:translateY(-50%) rotate(-10deg)}50%{left:110%;transform:translateY(-50%) rotate(10deg)}100%{left:-10%;transform:translateY(-50%) rotate(-10deg)}}
    .pulse{background:#ff5722;width:14px;height:14px;border-radius:50%;box-shadow:0 0 0 rgba(255,87,34,.4);animation:pulse 2s infinite}
    @keyframes pulse{0%{box-shadow:0 0 0 0 rgba(255,87,34,.4)}70%{box-shadow:0 0 0 22px rgba(255,87,34,0)}100%{box-shadow:0 0 0 0 rgba(255,87,34,.4)}}
  </style>
</head>
<body>
  <header>
    <h2 id="title">Find a Place on the Map</h2>

    <div>
      <input id="searchBox" type="text" placeholder="Enter city or address" />
      <button id="searchBtn">Search</button>

      <!-- language selector -->
      <select id="languageSelect">
        <option value="en">English</option>
        <option value="hi">Hindi</option>
        <option value="es">Español</option>
        <option value="fr">Français</option>
      </select>
    </div>

    <div class="plane"></div>
  </header>

  <div id="map"></div>

  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" crossorigin></script>
  <script>
    /* ------------------ translations ------------------ */
    const translations = {
      en:{title:"Find a Place on the Map",placeholder:"Enter city or address",search:"Search",notFound:"Location not found"},
      hi:{title:"नक्शे पर स्थान खोजें",placeholder:"शहर या पता दर्ज करें",search:"खोजें",notFound:"स्थान नहीं मिला"},
      es:{title:"Buscar un lugar en el mapa",placeholder:"Ingresa ciudad o dirección",search:"Buscar",notFound:"Ubicación no encontrada"},
      fr:{title:"Trouver un lieu sur la carte",placeholder:"Entrez la ville ou l'adresse",search:"Rechercher",notFound:"Lieu introuvable"}
    };

    /* ------------------ auto-detect language ------------------ */
    const languageSelect = document.getElementById('languageSelect');
    const browserLangCode = (navigator.languages?.[0] || navigator.language || 'en').slice(0,2).toLowerCase();
    const defaultLang = translations[browserLangCode] ? browserLangCode : 'en';
    languageSelect.value = defaultLang;

    let currentLang = defaultLang;

    const title      = document.getElementById('title');
    const searchBox  = document.getElementById('searchBox');
    const searchBtn  = document.getElementById('searchBtn');

    function updateLanguage(lang){
      currentLang = lang;
      const t = translations[lang];
      title.textContent = t.title;
      searchBox.placeholder = t.placeholder;
      searchBtn.textContent = t.search;
    }
    updateLanguage(currentLang);

    languageSelect.addEventListener('change', ()=>updateLanguage(languageSelect.value));

    /* ------------------ map + geocoder ------------------ */
    const map = L.map('map').setView([20.5937,78.9629],4);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{
      attribution:'&copy; OpenStreetMap contributors'
    }).addTo(map);

    let marker;
    async function geocode(q){
      const r = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(q)}`);
      return (await r.json())[0];
    }
    async function handleSearch(){
      const query = searchBox.value.trim();
      if(!query) return;
      const res = await geocode(query);
      if(!res){ alert(translations[currentLang].notFound); return; }

      const {lat,lon,display_name} = res;
      map.setView([lat,lon],13);

      if(marker) map.removeLayer(marker);
      marker = L.marker([lat,lon],{
        icon:L.divIcon({className:'',html:'<div class="pulse"></div>',iconSize:[14,14]})
      }).addTo(map).bindPopup(`<b>${display_name}</b>`).openPopup();
    }
    searchBtn.onclick = handleSearch;
    searchBox.onkeydown = e => (e.key==='Enter') && handleSearch();

    /* ------------------ optional geolocation ------------------ */
    if(navigator.geolocation){
      navigator.geolocation.getCurrentPosition(({coords})=>{
        map.setView([coords.latitude,coords.longitude],12);
      });
    }
  </script>
</body>
</html>
